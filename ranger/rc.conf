# estilo de navegacion por columna
set viewmode miller
#set viewmode multipane

# ¿Cuántas columnas hay y cuáles son sus anchos relativos?
set column_ratios 2,3,4

# ¿Qué archivos deben ocultarse? (expresión regular)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# ¿Mostrar archivos ocultos? Puedes activarlo escribiendo 'zh'
set show_hidden false

# ¿Solicitar confirmación al ejecutar el comando "eliminar"?
# Los valores válidos son "siempre", "nunca" y "múltiple" (predeterminado).
# Con "múltiple", Ranger solo preguntará si se eliminan varios archivos a la vez.
set confirm_on_delete multiple

# ¿Usar una ruta no predeterminada para el script de vista previa de archivos?
set preview_script ~/.config/ranger/scope.sh

# Use the external preview script or display simple plain text or image previews?
set use_preview_script true

# ¿Contar automáticamente los archivos en el directorio, incluso antes de ingresarlos?
set automatically_count_files true

# Abrir todas las imágenes de este directorio al ejecutar ciertos visores de imágenes.
# ¿Como feh o sxiv? Puedes abrir los archivos seleccionados marcándolos.
set open_all_images true

# Tenga en cuenta los sistemas de control de versiones y la información de visualización.
set vcs_aware false

# Estado de los cuatro backends: git, hg, bzr y svn. 
# Los estados posibles son: deshabilitado, 
# local (solo muestra información local) y habilitado (muestra información local y remota).
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled

# Trunca los mensajes de confirmación largos a esta longitud cuando se muestran en la barra de estado.
set vcs_msg_length 50

# Use one of the supported image preview protocols
set preview_images true

# Set the preview image method. Supported methods:
# * w3m (default):
# * iterm2:
# * terminology:
# * urxvt:
# * urxvt-full:
# * kitty:
# * ueberzug:
set preview_images_method ueberzug

# Retraso en segundos antes de mostrar una imagen con el método w3m.
# Auméntelo en caso de experimentar problemas de visualización.
set w3m_delay 0.02

# Manually adjust the w3mimg offset when using a terminal which needs this
set w3m_offset 0

# Default iTerm2 font size (see: preview_images_method: iterm2)
set iterm2_font_width 8
set iterm2_font_height 11

# Use a unicode "..." character to mark cut-off filenames?
set unicode_ellipsis false

# BIDI support - try to properly display file names in RTL languages (Hebrew, Arabic).
# Requires the python-bidi pip package
set bidi_support false

# Show dotfiles in the bookmark preview box?
set show_hidden_bookmarks true

# ¿Qué esquema de color usar? Estos esquemas de color están disponibles por defecto:
# predeterminado, jungla, nieve, solarizado
set colorscheme jungle


# ¿Previsualizar archivos en la columna más a la derecha?
# ¿Y contraer (reducir) la última columna si no hay nada que previsualizar?
set preview_files true
set preview_directories true
set collapse_preview true

# Las claves no asignadas se pasan directamente a la consola
set wrap_plaintext_previews false

# ¿Guardar el historial de la consola al salir?
set save_console_history true

# Dibujar la barra de estado en la parte superior de la ventana del navegador (predeterminado: inferior)
set status_bar_on_top false

# Dibuje una barra de progreso en la barra de estado que muestre el estado 
# promedio de todas las tareas actualmente en ejecución que admiten barras de progreso.
set draw_progress_bar_in_status_bar true

# ¿Dibujar bordes alrededor de las columnas? (separators, outline, both, or none)
# Los separadores son líneas verticales entre columnas.
# El contorno dibuja un cuadro alrededor de todas las columnas.
# Ambos combina ambos.
set draw_borders both

# ¿Mostrar el nombre del directorio en pestañas?
set dirname_in_tabs false

# ¿Habilitar el soporte del mouse?
set mouse_enabled true

# ¿Mostrar el tamaño del archivo en la columna principal o en la barra de estado?
set display_size_in_main_column true
set display_size_in_status_bar true

# ¿Mostrar el espacio libre en disco en la barra de estado?
set display_free_space_in_status_bar true

# ¿Mostrar etiquetas de archivos en todas las columnas o solo en la columna principal?
set display_tags_in_all_columns true

# ¿Establecer un título para la ventana? Actualiza tanto `WM_NAME` como `WM_ICON_NAME`
set update_title false

# ¿Establecer el nombre de la ventana tmux/screen en "ranger"?
set update_tmux_title true

# ¿Acortar el título si se hace largo? El número define cuántos 
# directorios se muestran a la vez. 0 desactiva esta función.
set shorten_title 3

# ¿Mostrar nombre de host en la barra de título?
set hostname_in_titlebar true

# Abreviar $HOME con ~ en la barra de título (primera línea) de ranger?
set tilde_in_titlebar true

# ¿Cuántos cambios de directorio o comandos de consola se deben mantener en el historial?
set max_history_size 20
set max_console_history_size 50

# Intenta mantener el máximo espacio posible entre el borde superior e inferior al desplazarte:
set scroll_offset 8

# ¿Limpiar la entrada después de cada pulsación de tecla? (Se nota cuando el ranger se retrasa)
set flushinput true

# ¿Relleno a la derecha cuando no hay vista previa?
# Esto permite hacer clic en el espacio para ejecutar el archivo.
set padding_right true

# ¿Guardar marcadores (usado con mX y `X) al instante?
# esto ayuda a sincronizar marcadores entre varias instancias de ranger,
# pero provoca una *leve* pérdida de rendimiento.
# Si es falso, los marcadores se guardan al salir de ranger.
set autosave_bookmarks false

# Guarda el marcador "`" en el disco. Esto permite cambiar al último 
# directorio escribiendo "``".
set save_backtick_bookmark false

# Puede mostrar el tamaño acumulado real de los directorios usando el comando `:get_cumulative_size` o escribiendo `dc`. Calcular el tamaño es costoso y no se actualiza automáticamente. Sin embargo, puede optar por actualizarlo automáticamente activando esta opción:
set autoupdate_cumulative_size true

# Activar esto tiene sentido para las lectoras de pantalla:
set show_cursor false

# Uno de: tamaño, natural, basename, atime, ctime, mtime, type, random
set sort natural

# Opciones de clasificación adicionales
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# Habilite esta opción si las combinaciones de teclas con la tecla Alt no le funcionan.
# (Especialmente en xterm)
set xterm_alt_key false

# Si se deben incluir marcadores en el comando cd
set cd_bookmarks true

# Cambia la distinción entre mayúsculas y minúsculas para el completado de pestañas del comando cd
set cd_tab_case sensitive

# Use el autocompletado de tabulación difuso con el comando
# "cd". Por ejemplo, ":cd /u/lo/b<tab>" se expande a ":cd /usr/local/bin".
set cd_tab_fuzzy false

# Evite previsualizar archivos que superen este tamaño en bytes. Use un valor de 0 para
# deshabilitar esta función.
set preview_max_size 0

# Las sublistas de las listas de sugerencias clave hasta este tamaño se expanden.
# De lo contrario, los submapas se reemplazan con "...".
set hint_collapse_threshold 10

# Agrega el archivo resaltado a la ruta en la barra de título
set show_selection_in_titlebar true

# El retraso que Ranger espera inactivamente la entrada del usuario, 
# en milisegundos, con una resolución de 100 ms. Un retraso menor 
# reduce el retardo entre actualizaciones de directorio, pero aumenta la carga de la CPU.
set idle_delay 2000

# # Cuando el módulo del administrador de metadatos busca metadatos,
# ¿debería buscar solo un archivo ".metadata.json" en el directorio actual 
# o realizar una búsqueda exhaustiva y revisar también todos los directorios superiores al actual?
set metadata_deep_search false

# Borrar todos los filtros existentes al salir de un directorio
set clear_filters_on_dir_change false

# Deshabilitar la visualización de números de línea en la columna principal.
# Possible values: false, absolute, relative.
set line_numbers relative

# Cuando line_numbers=relative muestra el número de línea absoluto en la línea actual.
set relative_current_zero false

# Los números de línea de inicio comienzan desde 1 en lugar de 0
set one_indexed false

# Guardar pestañas al salir
set save_tabs_on_exit false

# Habilitar ajuste de desplazamiento: al moverse hacia abajo mientras está 
# en el último elemento, se ajustará al desplazamiento hasta la parte superior y viceversa.
set wrap_scroll false

# Establezca el filtro global_inode_type_filter en nada. Opciones 
# posibles: d, f y l para directorios, archivos y enlaces simbólicos, respectivamente.
set global_inode_type_filter

# Esta configuración permite congelar la lista de archivos para ahorrar
# ancho de banda de E/S. Debe estar en "false" durante el inicio, 
# pero puede activarla pulsando F.
set freeze_files false

# Imprima el tamaño de los archivos en bytes en lugar del formato legible por humanos predeterminado.
set size_in_bytes false

# Avisar al inicio si la variable de entorno RANGER_LEVEL es mayor que 0; en otras palabras,
# Mostrar una advertencia al anidar un ranger en una subshell iniciada por ranger.
# El valor especial "error" hace que la advertencia sea más visible.
set nested_ranger_warning true

# config editor for default
# set use_editor nvim

# ===================================================================
# == Local Options
# ===================================================================
# You can set local options that only affect a single directory.

# Examples:
# setlocal path=~/downloads sort mtime

# ===================================================================
# == Command Aliases in the Console
# ===================================================================

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===================================================================
# == Define keys for the browser
# ===================================================================

# Basic
map     Q quitall
map     q quit

map R     reload_cwd
map F     set freeze_files!

map <C-r> reset

map <C-c> unmark

map <esc> change_mode normal

unmap ~ 
#set viewmode!

# visor
map i display_file

unmap <A-j> 
unmap <A-k>

map ? help

map W display_log
map w taskview_open

map :  console
map ;  console

unmap !
#console shell%space
unmap @
# console -p6 shell  %%s
unmap 
# console shell -p%space
unmap s
 # console shell%space
#map r  chain draw_possible_programs; console open_with%space
map / console find%space

unmap cd 
#console cd%space

map <C-p> chain console; eval fm.ui.console.history_move(-1)

# Change the line mode
map Mm linemode mtime
map Mf linemode filename
map Mi linemode fileinfo
map Mh linemode humanreadablemtime
map Mp linemode permissions
map Ms linemode sizemtime
map MH linemode sizehumanreadablemtime
map Mt linemode metatitle

# Tagging / Marking
unmap t 
# tag_toggle
unmap ut
# tag_remove
unmap "<any> 
# tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
unmap uv
# mark_files all=True val=False
map V       toggle_visual_mode
unmap uV
# toggle_visual_mode reverse=True


# For the nostalgics: Midnight Commander bindings
map <F1> help
map <F2> rmap d shell trash-put %sename_append
map <F3> display_file
map <F4> edit
map <F5> copy
map <F6> cut
map <F7> console mkdir%space
map <F8> console delete
map <F8> console trash
map <F10> exit

# In case you work on a keyboard with dvorak layout
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
#map <DELETE>   console delete
map <INSERT>   console touch%space

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse
map {     traverse_backwards
map )     jump_non

# ===================================================================
# == Coman Tux
# ===================================================================
map g/ cd /
map gh cd ~
map gd cd ~/Descargas
map gD cd ~/Documentos
map gi cd ~/Imágenes
map gp cd ~/.local/share/Trash/files
map ge cd ~/Escritorio
map gv cd ~/Vídeos
map gM cd ~/Música
map gmm cd ~/myCode
map gmd cd ~/myCode/Dotfiles/
map gmc cd ~/.config/
map gmp cd ~/.local/share/Trash/files/


map ss console shell%space
map sm  console shell mkdir%space
map st  console shell touch%space
# map S shell $SHELL -c "cd %d/%s; zsh"
map <C-u> unmark_all

map tt open_thunar
map cN copy_name
map tr recent_files

#map sth console shell touch %d/%s .html

# ===================================================================
# == Descomprimir y comprimir
# ===================================================================

# map cz console shell zip -r %s.zip %s
# map cz shell -p zip -r %f.zip %f


# map dz console shell unzip %s
# map dr console shell unrar x %s
# map ct console shell tar -cvf %s.tar %s
# map dt console shell tar -xvf %s
# map cg console shell gzip -9 %s
# map dg console shell gzip -d %s
# map cT console shell tar -czfv %s.tar.gz %s
# map dT console shell tar -xzvf %s


#Comprimir: tar -czfv archivo.tar.gz ficheros
#Descomprimir: tar -xzvf archivo.tar.gz
#%s=>nom Archiv
#%d=>ruta archivo

#map st  console shell mkdir%space
#map sm  console shell mkdir%space

#map gi eval fm.cd('/run/media/' + os.getenv('USER'))
# map ge
unmap gu
# map gd
unmap gl
unmap gL
unmap go
# map gv
# map gm cd /media
# map gM
unmap gs
unmap gr
unmap gR
unmap g?

# External Programs
unmap E
unmap du
unmap dU

map cp yank path
map cd yank dir
map cn yank name
map y. yank name_without_extension

# Filesystem Operations
map =  chmod

map cw console rename%space
map rr  rename_append
map R  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)


unmap pP
unmap pl
unmap pL
unmap phl
unmap pht
unmap pd
unmap p`<any>
unmap p'<any>


unmap dD 
#console delete
# map dT console trash

# ============== eliminar
map DD shell trash-put %s

# NOTE: papeleta
#mover a la papelera
# map DD shell mv %s /home/${USER}/.local/share/Trash/files/
# map DD delete_to_trash

# ============== Pegar
map pp paste
map po paste overwrite=True
map pO paste overwrite=True append=True

# ============== copiar
map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# ============== cortar
map dd cut
map ud uncut
map da cut mode=add
#map dr cut mode=remove
#map dt cut mode=toggle


# Temporary workarounds
#map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
unmap dG
unmap dj
unmap dk
#map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
unmap yG
unmap yj
unmap yk

# Searching
map f  console search%space
map n  search_next
map N  search_next forward=False
#map ct search_next order=tag
unmap cs
unmap ci
unmap cc
unmap cm
unmap ca

# Tabs
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gk        tab_move 1
map gj        tab_move -1
map gn        tab_new
map gc        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-r>     tab_shift 1
map <a-l>     tab_shift -1


map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map ov    set sort_directories_first!
# Sorting
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map on chain set sort=natural;     set sort_reverse=False
map ov    set sort_directories_first!


unmap or
unmap oz
unmap os
unmap ob
unmap oa
unmap ot
unmap oe
unmap oS 
unmap oB 
unmap oN 
unmap oM 
unmap oC 
unmap oA 
unmap oT 
unmap oE 
unmap dc 

# Settings
map zc    set collapse_preview!
map zh    set show_hidden!
map <C-h> set show_hidden!

copymap <C-h> <backspace>
copymap <backspace> <backspace2>

unmap zI
unmap zi
unmap zm
unmap zp
unmap zP
unmap zs
unmap zu
unmap zv
unmap zf
unmap ..

# Filter stack
unmap .d
unmap .f
unmap .l
unmap .m
unmap .n
unmap .#
unmap ."
unmap .'
unmap .|
unmap .&
unmap .!
unmap .r
unmap .c
unmap .*
unmap .p
#map .. filter_stack show

# Bookmarks
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===================================================================
# == Define keys for the console
# ===================================================================
# Note: Unmapped keys are passed directly to the console.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# And of course the emacs way
copycmap <ESC>       <C-g>
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===================================================================
# == Pager Keybindings
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Basic
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Taskview Keybindings
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>
default_linemode devicons

